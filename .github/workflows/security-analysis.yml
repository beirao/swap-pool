name: 🔒️ Smart contract security analysis

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: ["main", "security-setup-tools"]

# cancel previous runs on the same PR
concurrency:
  group: ${{ github.ref }}-tests
  cancel-in-progress: true

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "🔨 Install Foundry"
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: "💾 Foundry fork cache"
        uses: actions/cache@v3
        with:
          path: "~/.foundry/cache"
          key: foundry-${{ hashFiles('Makefile', 'foundry.toml') }}

      - name: "💾 Foundry compilation cache"
        uses: actions/cache@v3
        with:
          path: |
            cache
            out
          key: ${{ github.base_ref || github.ref_name }}-foundry
      
      - name: "🔒️ Run Slither"
        uses: crytic/slither-action@v0.3.0
        id: slither
        with:
          solc-version: 0.8.21
          sarif: results.sarif
          fail-on: none
          slither-config: 'tools/slither.config.json'

      - name: "📈 Upload SARIF file report"
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}